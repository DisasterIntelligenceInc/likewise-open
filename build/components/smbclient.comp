#!/bin/sh

COMP_DEPENDENCIES="autoconf krb5 openldap"
COMP_SOURCES="${BUILD_ROOT}/src/linux/samba30"

function component_gather
{
    rsync -a --exclude=.svn ${BUILD_ROOT}/src/linux/samba30/ ${GATHER_DIR}/
}

function _setup_build_env
{
    set_compiler_env

    cd ${BUILDING_ROOT}/source
    exit_on_error $?

    CFLAGS="${_cflags}"
    LDFLAGS="${_ldflags}"

    if [ "${BUILD_OS_TYPE}" = 'solaris' ]; then
        LDFLAGS="${LDFLAGS} -R${PREFIX_DIR}/${_lib}"
    fi

    if [ "${BUILD_OS_TYPE}" = 'linux' ]; then
        CFLAGS="${CFLAGS} -D_FILE_OFFSET_BITS=64"
        if [ "${BUILD_OS_ARCH}" = 'i386' ]; then
            CFLAGS="${CFLAGS} -march=i486"
        fi
    fi

    if [ "${BUILD_OS_TYPE}" = 'hpux' ] &&
       [ "${BUILD_OS_ARCH}" = 'hppa20' ] &&
       [ -n "${IS_COMPAT}" ]; then
	CFLAGS="${CFLAGS} -D_NET_IF6_INCLUDED"
    fi

    KRB5_DIRPATH=`get_staging_prefix_dir krb5`
    OPENLDAP_DIRPATH=`get_staging_prefix_dir openldap`
    DIRPATH="${KRB5_DIRPATH} ${OPENLDAP_DIRPATH}"

    if [ "${BUILD_OS_TYPE}" = 'aix' ]; then
        UUID_PATH="/opt/freeware/e2fsprogs"
        DIRPATH="${DIRPATH} ${UUIDPATH}"
    fi

    for dir in $DIRPATH; do
        PATH=$dir/bin:$PATH
        CPPFLAGS="$CPPFLAGS -I$dir/include"
        case "${BUILD_OS_TYPE}" in
            linux)
                LDFLAGS="$LDFLAGS -L$dir/${_lib} -Wl,-rpath-link,${dir}/${_lib}"
                ;;
            solaris)
                LDFLAGS="$LDFLAGS -L$dir/${_lib}"
                ;;
            aix)
                LDFLAGS="$LDFLAGS -L$dir/${_lib} -Wl,-R${PREFIX_DIR}/${_lib}"
                ;;
	    hpux)
	        LDFLAGS="$LDFLAGS -L$dir/${_lib}"
		;;
	    darwin)
	        LDFLAGS="$LDFLAGS -L$dir/${_lib}"
		;;
	    freebsd)
	        LDFLAGS="$LDFLAGS -L$dir/${_lib} -Wl,-rpath-link,${dir}/${_lib}"
		;;
            *)
                echo "Unsupported OS: ${BUILD_OS_TYPE}"
                exit 1
                ;;
        esac
    done

    case "${BUILD_OS_TYPE}" in
	linux)
	    export TRY_RUN_LDFLAGS="-Wl,-rpath,${KRB5_DIRPATH}/${_lib}"
	    ;;
	solaris)
	    ;;
	aix)
	    LDFLAGS="$LDFLAGS -Wl,-brtl -Wl,-bsvr4"
	    export TRY_RUN_LDFLAGS="-Wl,-R${KRB5_DIRPATH}/${_lib}"
	    CC="$(echo $CC | sed 's/^gcc/gcc-wrap.sh/')"
	    ;;
	hpux)
	    export TRY_RUN_LDFLAGS="-Wl,+s"
	    export SHLIB_PATH="$SHLIB_PATH:${KRB5_DIRPATH}/${_lib}:/usr/local/lib/hpux32"
	    ;;
	darwin)
	    export DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:${KRB5_DIRPATH}/${_lib}"
	    ;;
	freebsd)
	    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:${KRB5_DIRPATH}/${_lib}"
	    ;;
    esac

    CPPFLAGS="$CPPFLAGS -fPIC"
    LDFLAGS="$LDFLAGS -fPIC"

    export CPPFLAGS LDFLAGS PATH CC
}

function component_configure
{
    _setup_build_env

    local with_dnsupdate=
    if [ -z "${IS_COMPAT}" ]; then
        with_dnsupdate="--with-dnsupdate"
    else
	with_dnsupdate="--without-dnsupdate"
    fi

    local with_linker=

    # Linux-only for LD_LIBRARY_PATH?
    LD_LIBRARY_PATH="${KRB5_DIRPATH}/${_lib}:${LD_LIBRARY_PATH}" \
    ./configure \
        KRB5CONFIG_TRANSFORM="sed s,${PREFIX_DIR},${KRB5_DIRPATH}," \
        CFLAGS="$CFLAGS -D_GNU_SOURCE" \
        ${with_linker} \
	--prefix=$PREFIX_DIR \
        --with-krb5=${KRB5_DIRPATH} \
        --with-configdir=/etc/samba \
        --with-libdir=$PREFIX_DIR/${_lib} \
        --with-mandir=$PREFIX_DIR/man \
        --with-privatedir=/etc/samba \
        --with-ads \
        --with-fhs \
        --without-readline \
        --with-included-popt \
        --with-included-iniparser \
	--disable-pie \
        ${with_dnsupdate} \
        ${with_modules}

    exit_on_error $?

    ${MAKE} ${_mflags} showlayout
    ${MAKE} ${_mflags} proto
}

function component_build
{
    _setup_build_env

    touch precomp_test.h
    if gcc precomp_test.h &>/dev/null; then
        # This version of gcc supports precompiled headers
        echo "Using precompiled headers"
        ${MAKE} ${_mflags} pch
    fi
    rm -f precomp_test.*
    ${MAKE} ${_mflags} bin/lwismbclient
}

function component_stage
{
    _setup_build_env

    case "${BUILD_OS_TYPE}-${BUILD_OS_ARCH}" in
	hpux-hppa20)
            _SHLIB_EXT="sl"
	    ;;
	darwin-*)
	    _SHLIB_EXT="dylib"
	    ;;
	*)
	    _SHLIB_EXT="so"
	    ;;
    esac	    


    mkdir -m 0755 -p ${STAGING_PREFIX_DIR}/${_lib}

    if [ -z "${IS_COMPAT}" ]; then
        mkdir -m 0755 -p ${STAGING_PREFIX_DIR}/bin
    fi

    x_cp 0755 bin/lwismbclient ${STAGING_PREFIX_DIR}/bin/

    libtool_rewrite_staging
}

function component_populate
{
    local dir

    COMP_NAME=smbclient
    COMP_PREFIX_DIR=`get_comp_staging_prefix_dir ${COMP_NAME}`
    COMP_ROOT_DIR=`get_comp_staging_root_dir ${COMP_NAME}`

    mkdir -p ${POPULATE_PREFIX_DIR}/bin
    x_cp 0755 ${COMP_PREFIX_DIR}/bin/lwismbclient ${POPULATE_PREFIX_DIR}/bin/

    libtool_rewrite_populate
}
