SUBDIRS="include utils ipc logging_r common libshareinfo client server tools fuse etc tests"

configure()
{
    mk_config_header \
        HEADER="include/config.h"

    lw_define_feature_macros

    case "$MK_OS" in
        linux)
            mk_define __LWI_LINUX__
            ;;
        freebsd)
            mk_define __LWI_FREEBSD__
            mk_define HAVE_DECL_KERN_PROC_PATHNAME 1 # FIXME
            ;;
        solaris)
            mk_define __LWI_SOLARIS__
            ;;
        *)
            mk_fail "Unsupported OS: $MK_OS"
            ;;
    esac

    mk_check_endian

    mk_export MOD_EXT="$MK_DLO_EXT"
    mk_export SBINDIR="$MK_SBINDIR"
    mk_export providerdir="$MK_LIBDIR"

    mk_define MOD_EXT "\"$MK_DLO_EXT\""
    mk_define CACHEDIR "\"$LW_CACHEDIR\""
    mk_define LIBDIR "\"${MK_LIBDIR}\""
    mk_define PREFIXDIR "\"${MK_PREFIX}\""

    # FIXME: do a real configure test here
    mk_define HAVE_SOCKLEN_T 1
    mk_define GETSOCKNAME_TAKES_SOCKLEN_T 1

    # FIXME: make this an option
    mk_define LW_USE_SHARE_REPOSITORY_REGISTRY 1

    mk_define UNICODE 1

    MK_CFLAGS="$MK_CFLAGS -Wall -Werror -fno-strict-aliasing"

    mk_check_types \
        HEADERDEPS="sys/types.h" \
        blksize_t

    mk_check_libraries \
        FAIL="yes" \
        regclient lwbase krb5 gssapi_krb5 crypto lwnetclientapi

    mk_check_headers \
        FAIL="yes" \
        reg/reg.h lw/base.h krb5.h gssapi.h openssl/crypto.h wc16str.h \
        openssl/md5.h openssl/hmac.h openssl/rand.h

    mk_check_headers \
        inttypes.h stdlib.h sys/varargs.h dlfcn.h pthread.h \
        time.h sys/time.h strings.h stdbool.h sys/socket.h netinet/tcp.h \
        netdb.h wc16str.h wc16printf.h sys/param.h sys/pstat.h \
        procfs.h sys/procfs.h sys/vfs.h netinet/in.h netinet/in6.h

    mk_check_headers \
        CPPFLAGS="-D_FILE_OFFSET_BITS=64" \
        fuse.h

    mk_check_headers \
        HEADERDEPS="stdlib.h" \
        attr/xattr.h

    mk_check_headers \
        HEADERDEPS="sys/types.h" \
        sys/sysctl.h sys/user.h

    mk_check_types \
        HEADERDEPS="procfs.h sys/procfs.h" \
        "struct psinfo"

    mk_check_types \
        HEADERDEPS="sys/types.h sys/socket.h" \
        "socklen_t"

    mk_check_libraries \
        attr pthread nsl socket fuse

    mk_check_functions \
        HEADERDEPS="stdlib.h attr/xattr.h" \
        LIBDEPS="$LIB_ATTR" \
        setxattr fsetxattr getxattr fgetxattr

    mk_check_functions \
        HEADERDEPS="sys/vfs.h" \
        statfs fstatfs

    mk_check_functions \
        HEADERDEPS="unistd.h" \
        fdatasync fsync

    mk_check_functions \
        HEADERDEPS="sys/types.h dirent.h" \
        dirfd

    mk_check_functions \
        HEADERDEPS="stdlib.h" \
        strtoll strtoull

    if mk_check_function \
        HEADERDEPS="ctype.h" \
        FUNCTION="isblank"
    then
        mk_define HAVE_DECL_ISBLANK 1
    fi

    # Check for broken PTHREAD_ONCE_INIT
    if mk_try_compile \
        CODE="pthread_once_t once = PTHREAD_ONCE_INIT; *(&once) = once; return 0;" \
        CFLAGS="-Wall -Werror" \
        HEADERDEPS="pthread.h"
    then
        mk_define BROKEN_ONCE_INIT 0
        mk_msg "broken PTHREAD_ONCE_INIT: no"
    else
        mk_define BROKEN_ONCE_INIT 1
        mk_msg "broken PTHREAD_ONCE_INIT: yes"
    fi

    if [ "$HAVE_FUSE_H" != "no" -a "$HAVE_LIB_FUSE" != "no" ]
    then
        mk_msg "build FUSE module: yes"
    else
        mk_msg "build FUSE module: no"
        mk_skip_subdir fuse
    fi

    mk_output_file "etc/lwiod.reg"
}
