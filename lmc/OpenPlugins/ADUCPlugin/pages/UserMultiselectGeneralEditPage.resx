<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA4tJREFUSEutlglT
        U2cUhusfIWUri1hGnSmxaocRsFg7thC2iGEJiyICMRsubAYDprSItRgQESslLEGKFK3asS2OOq0dq61U
        HWzs9kOennuTS2lnME6TzCSZe+/3nee873fOSda8EuYVX2DjRUsC0x+tCRfjhc8VgPJOKLSTWNxMkvEQ
        iUUO9V44+EuBteAppUdJr3SxvsbN2rI2gTgjh2hZJpYcJr3qOBn1vWxq7GNDrYckAUasQguQZGphY10P
        W21eMp1nyWjoI7XimADskdmkAVLLO9A3fkz2kRHebh1li93Luqqu6AHSKjrZYhtgp2uCXe5pth05T/re
        E1EEmN1kNg+T57lMQe8VcjvGWL+vJ3qA1AoXmYeGKTz5Jcb+m+wQJek1nugBEoyHxfdBjKe/omzwNtvb
        fSTvaY+8ipRGCR60Hb2lH9PAAtUj98hqGSW+MNhsL9VM4RbFGaxSRaeo/vQH9vt+JrvlogS3Rg5QgsTm
        WVAAb4lF9ROLNPqf8K7brwKU+/9LRbyyUd0c/F5ramOP91uaLj2laWaJ6gv31M7W+kRbH86JkN/ieSgz
        ZcCtkwoqOnWDA1O/YJHgls+f0eB/TKn3Gzbs9cgQDA2+0J5VFQWzCUpOkEGWppbmCCWnb7Jv7CGN00+w
        XQ5gm3sukCX2Ty5SOrhAdvsYr1e51Um7Msa/1GhS4ySblPJO9NYBcl1+iiW4Weyon3ykZm+f+w3HF79z
        cPZXGgRYPXofo3eBd7pmeNMxRKq5i9jC/0xZLbjOYOe18uPobWfJcU1h6LtO2dBdakd/FEuC2Tvm/8B5
        5U9REcByaYk63yMqz39HkSSywz3DZucwKZUniDGs+L1QAHEGGzHFMu/r+sg8epGd3bOU9H8tm7+XID8t
        Z68Eb776F3ZVRYADk4+ldO+LVbd4r2eerFYfGxs+QVfSSqzEVM9D+XhVLuJ2d6gPt7WOscszx+4zC5il
        qerGFXueqfZoAMUm6+xzUfaUGlFYNnSH/N5r5HRMkmEdJMHkQpe/AqDaY+rkjaYzZLX5eL9njlIVII01
        vrgKILAMKD93F8PJ62w/NsUm+5BqtW6lAp2MguQKN/qDXnLax8n7cF4At6i6EB5Q+9kD/gH42ew4R7K5
        m5j80ChRLNIVOKUCugUwIIAJAVyVOtcAq1kUVKABCqQocjv9bJWDTqv5QI25fAbLHRn6pxDN678BCfg4
        aEHWdGgAAAAASUVORK5CYII=
</value>
  </data>
</root>